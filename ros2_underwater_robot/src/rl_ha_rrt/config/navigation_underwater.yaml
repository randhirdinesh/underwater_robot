# **Global Costmap Configuration**
global_costmap:
  global_costmap:
    ros__parameters:
      use_sim_time: false
      global_frame: map
      robot_base_frame: base_link
      resolution: 0.05
      footprint_padding: 0.1
      update_frequency: 2.0
      publish_frequency: 1.0
      track_unknown_space: true
      always_send_full_costmap: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      
      # **Sonar-Based Obstacle Detection**
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        footprint_clearing_enabled: true
        observation_sources: sonar_pointcloud
        sonar_pointcloud:
          topic: /sonar/points
          max_obstacle_height: 3.0
          min_obstacle_height: 0.2
          clearing: true
          marking: true
          data_type: "PointCloud2"

      # **3D Lidar-Based Obstacle Detection**
      lidar_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        footprint_clearing_enabled: true
        observation_sources: lidar_pointcloud
        lidar_pointcloud:
          topic: /lidar/points
          max_obstacle_height: 3.0
          min_obstacle_height: 0.2
          clearing: true
          marking: true
          data_type: "PointCloud2"

      # **Inflation Layer (Ensures smooth navigation)**
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.6
        cost_scaling_factor: 3.0

# **Local Costmap Configuration**
local_costmap:
  local_costmap:
    ros__parameters:
      use_sim_time: false
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_link
      rolling_window: true
      width: 5
      height: 5
      resolution: 0.05
      footprint_padding: 0.1
      track_unknown_space: false
      plugins: ["obstacle_layer", "inflation_layer"]

      # **Sonar-Based Local Obstacle Avoidance**
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: true
        observation_sources: sonar_pointcloud
        sonar_pointcloud:
          topic: /sonar/points
          max_obstacle_height: 2.5
          min_obstacle_height: 0.1
          clearing: true
          marking: true
          data_type: "PointCloud2"

      # **Inflation Layer (Smooth movement)**
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        enabled: true
        inflation_radius: 0.5
        cost_scaling_factor: 2.5

# **Planner Server (Path Planning)**
planner_server:
  ros__parameters:
    expected_planner_frequency: 5.0
    planner_plugins: ["RRTStarPlanner", "RL_HA_RRT_Planner"]
    
    RRTStarPlanner:
      plugin: "nav2_rrt_planner/RRTPlanner"

    RL_HA_RRT_Planner:
      plugin: "rl_ha_rrt/RL_HA_RRT_Planner"

# **Controller Server (Underwater Motion & Obstacle Avoidance)**
controller_server:
  ros__parameters:
    controller_frequency: 30.0
    controller_plugins: ["MPPIController"]

    MPPIController:
      plugin: "nav2_mppi_controller::MPPIController"
      time_steps: 30
      model_dt: 0.08  # Optimized for real-time control
      batch_size: 800  # Parallel computation for better efficiency
      vx_max: 1.2
      vx_min: -1.2
      vy_max: 1.2
      vy_min: -1.2
      wz_max: 1.5
      wz_min: -1.5
      accel_lim_x: 2.0
      accel_lim_y: 2.0
      accel_lim_theta: 1.2
      temperature: 0.2  # Lower temperature for smoother control
      gamma: 0.98
      motion_model: "OmniDirectional"
      policy_stddev_x: 0.25
      policy_stddev_y: 0.25
      policy_stddev_theta: 0.15

# **Waypoint Following**
waypoint_follower:
  ros__parameters:
    loop_rate: 10
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"   
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: true
      waypoint_pause_duration: 5
